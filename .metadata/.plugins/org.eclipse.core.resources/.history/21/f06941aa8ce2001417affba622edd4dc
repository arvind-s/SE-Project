package com.findServer;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.SocketTimeoutException;
import java.net.UnknownHostException;

import constants.Constants;

public class DReceiver implements Runnable
{
	public void run()
	{
		DatagramSocket ds = null;
		try
		{
			ds = new DatagramSocket();
			ds.setSoTimeout(2000);
		}
		catch (SocketException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		byte[] buf = new byte[1024];
		for(int tries=0;tries<7;tries++)
		{
			//send first and wait for reply
			String ipad = getIpAddress();

			String serverIP = ipad;
			System.out.println(ipad);
			String ipParts[] = ipad.split("[.]");
			String inetName = ipParts[0] + "." + ipParts[1] + "." + ipParts[2]
					+ ".255";

			InetAddress ip = null;
			try
			{
				ip = InetAddress.getByName(inetName);
			}
			catch (UnknownHostException e1)
			{
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}

			DatagramPacket dp = new DatagramPacket(serverIP.getBytes(),
					serverIP.length(), ip, 3000);
			try
			{
				ds.send(dp);
			}
			catch (IOException e)
			{
				e.printStackTrace();
			}

			
			//waiting for reply
			DatagramPacket dp = new DatagramPacket(buf, 1024);
			try
			{
				ds.receive(dp);
			}
			catch(SocketTimeoutException ex)
			{
				if(tries == 6)
				{
					//Start tracker server
					//new Tracker();
					//run abhinavs script
					//start ip provider server
					new Thread(new DSender()).start();
				}
				continue;
			}
			catch (IOException e)
			{
				e.printStackTrace();
			}
			String str = new String(dp.getData(), 0, dp.getLength());
			System.out.println(str);
			Constants.serverIp = str;
//			ds.close();
		}
	}
}
