package com.findServer;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.SocketTimeoutException;
import java.net.UnknownHostException;

import utils.Addressing;
import constants.Constants;

public class TrackerClient implements Runnable
{
	DatagramPacket dp;
	public void run()
	{
		DatagramSocket dsend = null;
		try
		{
			dsend = new DatagramSocket();
		}
		catch (SocketException e)
		{
			e.printStackTrace();
		}
		DatagramSocket drcv = null;
		try
		{
			drcv = new DatagramSocket(2000);
			drcv.setSoTimeout(2000);
		}
		catch (SocketException e)
		{
			e.printStackTrace();
		}
		byte[] buf = new byte[1024];
		for(int tries=0;tries<7;tries++)
		{
			//send first and wait for reply
			String ipad = Addressing.getIpAddress();

			System.out.println("try no:"+tries);
			String serverIP = ipad;
			System.out.println(ipad);
			String ipParts[] = ipad.split("[.]");
			String inetName = ipParts[0] + "." + ipParts[1] + "." + ipParts[2]
					+ ".255";

			InetAddress ip = null;
			try
			{
				ip = InetAddress.getByName(inetName);
			}
			catch (UnknownHostException e1)
			{
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}

			dp = new DatagramPacket(serverIP.getBytes(),
					serverIP.length(), ip, 3000);
			try
			{
				dsend.send(dp);
			}
			catch (IOException e)
			{
				e.printStackTrace();
			}

			
			
			//waiting for reply
			dp = new DatagramPacket(buf, 1024);
			try
			{
				drcv.receive(dp);
				System.out.println("Breaking");
				break;
			}
			catch(SocketTimeoutException ex)
			{
				if(tries == 6)
				{
					//Start tracker server
					//new Tracker();
					//run abhinavs script
					//start ip provider server
					new Thread(new TrackerServer()).start();
				}
				continue;
			}
			catch (IOException e)
			{
				e.printStackTrace();
			}
			
//			ds.close();
		}
		String str = new String(dp.getData(), 0, dp.getLength());
		System.out.println("final server ip"+str);
		Constants.serverIp = str;
	}
}
